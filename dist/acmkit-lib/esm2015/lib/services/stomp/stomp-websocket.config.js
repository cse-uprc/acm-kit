import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { UrlService } from '../url/url.service';
export const defaultStompConfig = {
    // Which server?
    brokerURL: '',
    // How often to heartbeat?
    // Interval in milliseconds, set to 0 to disable
    heartbeatIncoming: 20000,
    heartbeatOutgoing: 20000,
    // Wait in milliseconds before attempting auto reconnect
    // Set to 0 to disable
    // Typical value 500 (500 milli seconds)
    reconnectDelay: 5000,
};
let StompUrlService = class StompUrlService {
    constructor(urlService) {
        this.urlService = urlService;
    }
    /**
     * Builds the broker URL.
     * @param subdomain The subdomain.
     */
    buildBrokerUrl() {
        return this.urlService.getSocketPath();
    }
};
StompUrlService.ctorParameters = () => [
    { type: UrlService }
];
StompUrlService = __decorate([
    Injectable()
], StompUrlService);
export { StompUrlService };
/**
 * A factory for creating an InjectableRxStompConfig for use with Insite notifications.
 * @param stompUrlService The STOMP URL service
 */
export const stompConfigFactory = (stompUrlService) => {
    return Object.assign(Object.assign({}, defaultStompConfig), { brokerURL: stompUrlService.buildBrokerUrl() });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvbXAtd2Vic29ja2V0LmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FjbWtpdC1saWIvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvc3RvbXAvc3RvbXAtd2Vic29ja2V0LmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFaEQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQTRCO0lBQ3pELGdCQUFnQjtJQUNoQixTQUFTLEVBQUUsRUFBRTtJQUViLDBCQUEwQjtJQUMxQixnREFBZ0Q7SUFDaEQsaUJBQWlCLEVBQUUsS0FBSztJQUN4QixpQkFBaUIsRUFBRSxLQUFLO0lBRXhCLHdEQUF3RDtJQUN4RCxzQkFBc0I7SUFDdEIsd0NBQXdDO0lBQ3hDLGNBQWMsRUFBRSxJQUFJO0NBQ3JCLENBQUM7QUFHRixJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFlO0lBQzFCLFlBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBRyxDQUFDO0lBQzlDOzs7T0FHRztJQUNILGNBQWM7UUFDWixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDekMsQ0FBQztDQUNGLENBQUE7O1lBUmlDLFVBQVU7O0FBRC9CLGVBQWU7SUFEM0IsVUFBVSxFQUFFO0dBQ0EsZUFBZSxDQVMzQjtTQVRZLGVBQWU7QUFXNUI7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FDaEMsZUFBZ0MsRUFDUCxFQUFFO0lBQzNCLHVDQUNLLGtCQUFrQixLQUNyQixTQUFTLEVBQUUsZUFBZSxDQUFDLGNBQWMsRUFBRSxJQUMzQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZVJ4U3RvbXBDb25maWcgfSBmcm9tICdAc3RvbXAvbmcyLXN0b21wanMnO1xyXG5pbXBvcnQgeyBFbnZpcm9ubWVudCB9IGZyb20gJy4uLy4uL2Fzc2V0cy9nbG9iYWxzJztcclxuaW1wb3J0IHsgVXJsU2VydmljZSB9IGZyb20gJy4uL3VybC91cmwuc2VydmljZSc7XHJcblxyXG5leHBvcnQgY29uc3QgZGVmYXVsdFN0b21wQ29uZmlnOiBJbmplY3RhYmxlUnhTdG9tcENvbmZpZyA9IHtcclxuICAvLyBXaGljaCBzZXJ2ZXI/XHJcbiAgYnJva2VyVVJMOiAnJyxcclxuXHJcbiAgLy8gSG93IG9mdGVuIHRvIGhlYXJ0YmVhdD9cclxuICAvLyBJbnRlcnZhbCBpbiBtaWxsaXNlY29uZHMsIHNldCB0byAwIHRvIGRpc2FibGVcclxuICBoZWFydGJlYXRJbmNvbWluZzogMjAwMDAsIC8vIFR5cGljYWwgdmFsdWUgMCAtIGRpc2FibGVkXHJcbiAgaGVhcnRiZWF0T3V0Z29pbmc6IDIwMDAwLCAvLyBUeXBpY2FsIHZhbHVlIDIwMDAwIC0gZXZlcnkgMjAgc2Vjb25kc1xyXG5cclxuICAvLyBXYWl0IGluIG1pbGxpc2Vjb25kcyBiZWZvcmUgYXR0ZW1wdGluZyBhdXRvIHJlY29ubmVjdFxyXG4gIC8vIFNldCB0byAwIHRvIGRpc2FibGVcclxuICAvLyBUeXBpY2FsIHZhbHVlIDUwMCAoNTAwIG1pbGxpIHNlY29uZHMpXHJcbiAgcmVjb25uZWN0RGVsYXk6IDUwMDAsXHJcbn07XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTdG9tcFVybFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdXJsU2VydmljZTogVXJsU2VydmljZSkge31cclxuICAvKipcclxuICAgKiBCdWlsZHMgdGhlIGJyb2tlciBVUkwuXHJcbiAgICogQHBhcmFtIHN1YmRvbWFpbiBUaGUgc3ViZG9tYWluLlxyXG4gICAqL1xyXG4gIGJ1aWxkQnJva2VyVXJsKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy51cmxTZXJ2aWNlLmdldFNvY2tldFBhdGgoKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIGZhY3RvcnkgZm9yIGNyZWF0aW5nIGFuIEluamVjdGFibGVSeFN0b21wQ29uZmlnIGZvciB1c2Ugd2l0aCBJbnNpdGUgbm90aWZpY2F0aW9ucy5cclxuICogQHBhcmFtIHN0b21wVXJsU2VydmljZSBUaGUgU1RPTVAgVVJMIHNlcnZpY2VcclxuICovXHJcbmV4cG9ydCBjb25zdCBzdG9tcENvbmZpZ0ZhY3RvcnkgPSAoXHJcbiAgc3RvbXBVcmxTZXJ2aWNlOiBTdG9tcFVybFNlcnZpY2VcclxuKTogSW5qZWN0YWJsZVJ4U3RvbXBDb25maWcgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICAuLi5kZWZhdWx0U3RvbXBDb25maWcsXHJcbiAgICBicm9rZXJVUkw6IHN0b21wVXJsU2VydmljZS5idWlsZEJyb2tlclVybCgpLFxyXG4gIH07XHJcbn07XHJcbiJdfQ==