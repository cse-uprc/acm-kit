import { __awaiter } from "tslib";
import { TestBed } from '@angular/core/testing';
export class AbstractTestBed {
    static useProvider(moduleMetaData, provider) {
        const index = moduleMetaData.providers.findIndex((p) => p.provide === provider || p.provide === provider.provide);
        if (index >= 0) {
            moduleMetaData.providers.splice(index, 1);
        }
        moduleMetaData.providers.push(provider);
    }
    static setup(updateModuleMetaData) {
        return __awaiter(this, void 0, void 0, function* () {
            const moduleMetaData = this.getModuleMetaData();
            if (updateModuleMetaData) {
                updateModuleMetaData(moduleMetaData);
            }
            TestBed.configureTestingModule(moduleMetaData);
        });
    }
    static getModuleMetaData() {
        return null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtdGVzdC1iZWQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hY21raXQtbGliLyIsInNvdXJjZXMiOlsibGliL3Rlc3RpbmcvYWJzdHJhY3QtdGVzdC1iZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQXNCLE1BQU0sdUJBQXVCLENBQUM7QUFFcEUsTUFBTSxPQUFnQixlQUFlO0lBQ25DLE1BQU0sQ0FBQyxXQUFXLENBQUMsY0FBa0MsRUFBRSxRQUFhO1FBQ2xFLE1BQU0sS0FBSyxHQUFHLGNBQWMsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxRQUFRLENBQUMsT0FBTyxDQUNoRSxDQUFDO1FBQ0YsSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFO1lBQ2QsY0FBYyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsY0FBYyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELE1BQU0sQ0FBTyxLQUFLLENBQ2hCLG9CQUFtRTs7WUFFbkUsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDaEQsSUFBSSxvQkFBb0IsRUFBRTtnQkFDeEIsb0JBQW9CLENBQUMsY0FBYyxDQUFDLENBQUM7YUFDdEM7WUFDRCxPQUFPLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDakQsQ0FBQztLQUFBO0lBQ0QsTUFBTSxDQUFDLGlCQUFpQjtRQUN0QixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlc3RCZWQsIFRlc3RNb2R1bGVNZXRhZGF0YSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RUZXN0QmVkIHtcclxuICBzdGF0aWMgdXNlUHJvdmlkZXIobW9kdWxlTWV0YURhdGE6IFRlc3RNb2R1bGVNZXRhZGF0YSwgcHJvdmlkZXI6IGFueSkge1xyXG4gICAgY29uc3QgaW5kZXggPSBtb2R1bGVNZXRhRGF0YS5wcm92aWRlcnMuZmluZEluZGV4KFxyXG4gICAgICAocCkgPT4gcC5wcm92aWRlID09PSBwcm92aWRlciB8fCBwLnByb3ZpZGUgPT09IHByb3ZpZGVyLnByb3ZpZGVcclxuICAgICk7XHJcbiAgICBpZiAoaW5kZXggPj0gMCkge1xyXG4gICAgICBtb2R1bGVNZXRhRGF0YS5wcm92aWRlcnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH1cclxuICAgIG1vZHVsZU1ldGFEYXRhLnByb3ZpZGVycy5wdXNoKHByb3ZpZGVyKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBzZXR1cChcclxuICAgIHVwZGF0ZU1vZHVsZU1ldGFEYXRhPzogKG1vZHVsZU1ldGFEYXRhOiBUZXN0TW9kdWxlTWV0YWRhdGEpID0+IHZvaWRcclxuICApOiBQcm9taXNlPGFueT4ge1xyXG4gICAgY29uc3QgbW9kdWxlTWV0YURhdGEgPSB0aGlzLmdldE1vZHVsZU1ldGFEYXRhKCk7XHJcbiAgICBpZiAodXBkYXRlTW9kdWxlTWV0YURhdGEpIHtcclxuICAgICAgdXBkYXRlTW9kdWxlTWV0YURhdGEobW9kdWxlTWV0YURhdGEpO1xyXG4gICAgfVxyXG4gICAgVGVzdEJlZC5jb25maWd1cmVUZXN0aW5nTW9kdWxlKG1vZHVsZU1ldGFEYXRhKTtcclxuICB9XHJcbiAgc3RhdGljIGdldE1vZHVsZU1ldGFEYXRhKCk6IFRlc3RNb2R1bGVNZXRhZGF0YSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuIl19