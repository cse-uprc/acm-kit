{"version":3,"file":"acmkit-lib.js","sources":["ng://acmkit-lib/lib/acmkit-lib.component.ts","ng://acmkit-lib/lib/assets/icons/bell/bell.component.ts","ng://acmkit-lib/lib/assets/icons/board-members/board-members.component.ts","ng://acmkit-lib/lib/assets/icons/calendar/calendar.component.ts","ng://acmkit-lib/lib/assets/icons/classroom/classroom.component.ts","ng://acmkit-lib/lib/assets/icons/contact/contact.component.ts","ng://acmkit-lib/lib/assets/icons/contract/contract.component.ts","ng://acmkit-lib/lib/assets/icons/hamburger/hamburger.component.ts","ng://acmkit-lib/lib/assets/icons/house/house.component.ts","ng://acmkit-lib/lib/assets/icons/icon.component.ts","ng://acmkit-lib/lib/assets/icons/info/info.component.ts","ng://acmkit-lib/lib/assets/icons/question/question.component.ts","ng://acmkit-lib/lib/assets/icons/resources/resources.component.ts","ng://acmkit-lib/lib/assets/icons/robot/robot.component.ts","ng://acmkit-lib/lib/assets/icons/teachers/teachers.component.ts","ng://acmkit-lib/lib/assets/icons/video/video.component.ts","ng://acmkit-lib/lib/assets/icons/icons.module.ts","ng://acmkit-lib/lib/components/base-page/base-page.component.ts","ng://acmkit-lib/lib/components/card/card.component.ts","ng://acmkit-lib/lib/services/particles/particles.service.ts","ng://acmkit-lib/lib/assets/particles/landing.ts","ng://acmkit-lib/lib/components/landing/landing.component.ts","ng://acmkit-lib/lib/assets/globals.ts","ng://acmkit-lib/lib/services/url/url.service.ts","ng://acmkit-lib/lib/services/auth/auth.service.ts","ng://acmkit-lib/lib/services/user/user.service.ts","ng://acmkit-lib/lib/components/login-card/login-card.component.ts","ng://acmkit-lib/lib/components/navbar/navbar.component.ts","ng://acmkit-lib/lib/components/sidebar/sidebar.component.ts","ng://acmkit-lib/lib/services/jwt/jwt.service.ts","ng://acmkit-lib/lib/services/stomp/stomp-websocket.config.ts","ng://acmkit-lib/lib/services/stomp/stomp-websocket.service.ts","ng://acmkit-lib/lib/services/stomp/stomp-websocket.module.ts","ng://acmkit-lib/lib/services/services.module.ts","ng://acmkit-lib/lib/acmkit-lib.module.ts","ng://acmkit-lib/lib/acmkit-lib.service.ts","ng://acmkit-lib/lib/testing/abstract-test-bed.ts","ng://acmkit-lib/lib/testing/acm-kit-test-bed.ts","ng://acmkit-lib/lib/testing/test-setup.ts","ng://acmkit-lib/public-api.ts","ng://acmkit-lib/acmkit-lib.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-test-component',\r\n  template: `\r\n    <p>\r\n      Library is Working! On Version 1.0.3 Finally\r\n    </p>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class AcmkitLibComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-bell',\r\n  templateUrl: 'bell.svg',\r\n})\r\nexport class BellIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-board-members',\r\n  templateUrl: 'board-members.svg',\r\n})\r\nexport class BoardMemebersIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-calendar',\r\n  templateUrl: 'calendar.svg',\r\n})\r\nexport class CalendarIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-classroom',\r\n  templateUrl: 'classroom.svg',\r\n})\r\nexport class ClassroomIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-contact',\r\n  templateUrl: 'contact.svg',\r\n})\r\nexport class ContactIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-contract',\r\n  templateUrl: 'contract.svg',\r\n})\r\nexport class ContractIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-hamburger',\r\n  templateUrl: 'hamburger.svg',\r\n})\r\nexport class HamburgerIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-house',\r\n  templateUrl: 'house.svg',\r\n})\r\nexport class HouseIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon',\r\n  templateUrl: './icon.component.html',\r\n})\r\nexport class IconComponent {\r\n  @Input() icon = '';\r\n\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-info',\r\n  templateUrl: 'info.svg',\r\n})\r\nexport class InfoIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-question',\r\n  templateUrl: 'question.svg',\r\n})\r\nexport class QuestionIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-resources',\r\n  templateUrl: 'resources.svg',\r\n})\r\nexport class ResourcesIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-robot',\r\n  templateUrl: 'robot.svg',\r\n})\r\nexport class RobotIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-teachers',\r\n  templateUrl: 'teachers.svg',\r\n})\r\nexport class TeachersIconComponent {\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-icon-video',\r\n  templateUrl: 'video.svg',\r\n})\r\nexport class VideoIconComponent {\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BellIconComponent } from './bell/bell.component';\r\nimport { BoardMemebersIconComponent } from './board-members/board-members.component';\r\nimport { CalendarIconComponent } from './calendar/calendar.component';\r\nimport { ClassroomIconComponent } from './classroom/classroom.component';\r\nimport { ContactIconComponent } from './contact/contact.component';\r\nimport { ContractIconComponent } from './contract/contract.component';\r\nimport { HamburgerIconComponent } from './hamburger/hamburger.component';\r\nimport { HouseIconComponent } from './house/house.component';\r\nimport { IconComponent } from './icon.component';\r\nimport { InfoIconComponent } from './info/info.component';\r\nimport { QuestionIconComponent } from './question/question.component';\r\nimport { ResourcesIconComponent } from './resources/resources.component';\r\nimport { RobotIconComponent } from './robot/robot.component';\r\nimport { TeachersIconComponent } from './teachers/teachers.component';\r\nimport { VideoIconComponent } from './video/video.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BellIconComponent,\r\n    HouseIconComponent,\r\n    IconComponent,\r\n    HamburgerIconComponent,\r\n    VideoIconComponent,\r\n    ClassroomIconComponent,\r\n    ResourcesIconComponent,\r\n    TeachersIconComponent,\r\n    BoardMemebersIconComponent,\r\n    ContractIconComponent,\r\n    CalendarIconComponent,\r\n    InfoIconComponent,\r\n    RobotIconComponent,\r\n    QuestionIconComponent,\r\n    ContactIconComponent,\r\n  ],\r\n  exports: [\r\n    BellIconComponent,\r\n    HouseIconComponent,\r\n    IconComponent,\r\n    HamburgerIconComponent,\r\n    VideoIconComponent,\r\n    ClassroomIconComponent,\r\n    ResourcesIconComponent,\r\n    TeachersIconComponent,\r\n    BoardMemebersIconComponent,\r\n    ContractIconComponent,\r\n    CalendarIconComponent,\r\n    InfoIconComponent,\r\n    RobotIconComponent,\r\n    QuestionIconComponent,\r\n    ContactIconComponent,\r\n  ],\r\n  imports: [BrowserModule],\r\n})\r\nexport class IconsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-base-page',\r\n  templateUrl: './base-page.component.html',\r\n})\r\nexport class BasePageComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ak-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Input() editRoute = '/';\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onEditClick() {\r\n    this.router.navigate([this.editRoute]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare var particlesJS: any;\r\n\r\n/**\r\n * Class to help manage a particle config.\r\n *\r\n * @author Sam Butler\r\n * @since August 24, 2020\r\n */\r\n@Injectable()\r\nexport class ParticlesService {\r\n  constructor() {}\r\n\r\n  /**\r\n   * Initializes the particlesJS based on the passed in config file\r\n   *\r\n   * @param configFile - The particle config file we want to initialize\r\n   */\r\n  init(configFile: any) {\r\n    particlesJS('particles-js', configFile, () => {});\r\n  }\r\n}\r\n","export const LandingParticleConfig = {\r\n  particles: {\r\n    number: {\r\n      value: 50,\r\n      density: {\r\n        enable: true,\r\n        value_area: 1500,\r\n      },\r\n    },\r\n    color: {\r\n      value: '#ffffff',\r\n    },\r\n    shape: {\r\n      type: 'polygon',\r\n      stroke: {\r\n        width: 1,\r\n        color: '#ffffff',\r\n      },\r\n      polygon: {\r\n        nb_sides: 10,\r\n      },\r\n    },\r\n    opacity: {\r\n      value: 1,\r\n      random: true,\r\n      anim: {\r\n        enable: true,\r\n        speed: 1.0,\r\n        opacity_min: 0.25,\r\n        sync: true,\r\n      },\r\n    },\r\n    size: {\r\n      value: 2,\r\n      random: true,\r\n      anim: {\r\n        enable: true,\r\n        speed: 10,\r\n        size_min: 1.25,\r\n        sync: true,\r\n      },\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: '#ffffff',\r\n      opacity: 1,\r\n      width: 1,\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 8,\r\n      direction: 'none',\r\n      random: true,\r\n      straight: false,\r\n      out_mode: 'out',\r\n      bounce: true,\r\n      attract: {\r\n        enable: true,\r\n        rotateX: 2000,\r\n        rotateY: 2000,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    detect_on: 'canvas',\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: 'grab',\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: 'repulse',\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 200,\r\n        line_linked: {\r\n          opacity: 3,\r\n        },\r\n      },\r\n      repulse: {\r\n        distance: 250,\r\n        duration: 2,\r\n      },\r\n    },\r\n  },\r\n  retina_detect: true,\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  ViewChild,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ParticlesService } from '../../services/particles/particles.service';\r\nimport { LandingParticleConfig } from '../../assets/particles/landing';\r\n\r\n@Component({\r\n  selector: 'ak-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements AfterViewInit, OnInit {\r\n  @ViewChild('home') homeElement: ElementRef;\r\n  @ViewChild('about') aboutElement: ElementRef;\r\n  @ViewChild('feature') featureElemet: ElementRef;\r\n  @ViewChild('team') teamElement: ElementRef;\r\n\r\n  public currentActive = 0;\r\n  public homeOffset: number = null;\r\n  public aboutOffset: number = null;\r\n  public featureOffset: number = null;\r\n  public teamOffset: number = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private particleService: ParticlesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.particleService.init(LandingParticleConfig);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.homeOffset = this.homeElement.nativeElement.offsetTop;\r\n    this.aboutOffset = this.aboutElement.nativeElement.offsetTop - 500;\r\n    this.featureOffset = this.featureElemet.nativeElement.offsetTop - 500;\r\n    this.teamOffset = this.teamElement.nativeElement.offsetTop - 500;\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  scrollHandler() {\r\n    if (window.pageYOffset < 625) {\r\n      this.currentActive = 0;\r\n    } else if (window.pageYOffset >= 625 && window.pageYOffset < 1200) {\r\n      this.currentActive = 1;\r\n    } else if (window.pageYOffset >= 1200 && window.pageYOffset < 1800) {\r\n      this.currentActive = 2;\r\n    } else {\r\n      this.currentActive = 3;\r\n    }\r\n  }\r\n\r\n  onSignIn() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","export class Environment {\r\n  public static PRODUCTION_HOST = 'acm-microservice-prod';\r\n  public static DEVELOPMENT_HOST = 'acm-microservice-dev';\r\n  public static LOCAL_HOST = 'localhost:8080';\r\n  public static HEROKU_URI = 'herokuapp.com';\r\n\r\n  public static PRODUCTION_PATH = 'acm-web';\r\n  public static DEVELOPMENT_PATH = 'acm-ui-dev';\r\n  public static LOCAL_PATH = 'localhost:4200';\r\n\r\n  public static SOCKET_ENDPOINT = '/api/web-notification-app/websocket';\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Environment } from '../../assets/globals';\r\n\r\n/**\r\n * URL Service\r\n *\r\n * @author Sam Butler\r\n * @since Dec 15, 2020\r\n */\r\n@Injectable()\r\nexport class UrlService {\r\n  private urlPath: string;\r\n\r\n  constructor() {\r\n    this.urlPath = window.location.href;\r\n  }\r\n\r\n  /**\r\n   * Get's the host environment\r\n   *\r\n   * @returns string of the host path\r\n   */\r\n  getHost(): string {\r\n    if (this.urlPath.includes(Environment.PRODUCTION_PATH)) {\r\n      return Environment.PRODUCTION_HOST;\r\n    } else if (this.urlPath.includes(Environment.DEVELOPMENT_PATH)) {\r\n      return Environment.DEVELOPMENT_HOST;\r\n    }\r\n    return Environment.LOCAL_HOST;\r\n  }\r\n\r\n  /**\r\n   * Get's the web path of the url\r\n   *\r\n   * @returns string of the web path\r\n   */\r\n  getPath(): string {\r\n    if (this.urlPath.includes(Environment.PRODUCTION_PATH)) {\r\n      return Environment.PRODUCTION_PATH;\r\n    } else if (this.urlPath.includes(Environment.DEVELOPMENT_PATH)) {\r\n      return Environment.DEVELOPMENT_PATH;\r\n    }\r\n    return Environment.LOCAL_PATH;\r\n  }\r\n\r\n  /**\r\n   * Get's the full web URL\r\n   *\r\n   * @returns string of the full web url\r\n   */\r\n  getWebUrl(): string {\r\n    if (this.isHttps()) {\r\n      return `https://${this.getPath()}.${Environment.HEROKU_URI}`;\r\n    } else if (this.isLocal()) {\r\n      return `http://${this.getPath()}`;\r\n    }\r\n    return `http://${this.getPath()}.${Environment.HEROKU_URI}`;\r\n  }\r\n\r\n  /**\r\n   * Get's the full API URL\r\n   *\r\n   * @returns string of the full API url\r\n   */\r\n  getAPIUrl(): string {\r\n    if (this.isHttps()) {\r\n      return `https://${this.getHost()}.${Environment.HEROKU_URI}`;\r\n    } else if (this.isLocal()) {\r\n      return `http://${this.getHost()}`;\r\n    }\r\n    return `http://${this.getHost()}.${Environment.HEROKU_URI}`;\r\n  }\r\n\r\n  /**\r\n   * Get's the socket environment\r\n   *\r\n   * @returns string of the socket path\r\n   */\r\n  getSocketPath(): string {\r\n    const socketType = this.isHttps() ? 'wss://' : 'ws://';\r\n    if (this.isLocal()) {\r\n      return `${socketType}${this.getHost()}${Environment.SOCKET_ENDPOINT}`;\r\n    }\r\n    return `${socketType}${this.getHost()}.${Environment.HEROKU_URI}${\r\n      Environment.SOCKET_ENDPOINT\r\n    }`;\r\n  }\r\n\r\n  /**\r\n   * Determines if the url is https or http\r\n   *\r\n   * @returns boolean of logical comparison\r\n   */\r\n  isHttps(): boolean {\r\n    return this.urlPath.includes('https');\r\n  }\r\n\r\n  /**\r\n   * Determines if the url is local\r\n   *\r\n   * @returns boolean of logical comparison\r\n   */\r\n  isLocal(): boolean {\r\n    return this.urlPath.includes('localhost');\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Environment } from '../../assets/globals';\r\nimport { UrlService } from '../url/url.service';\r\n\r\n/**\r\n * Auth service class that deals with authorizing a user\r\n *\r\n * @author Sam Butler\r\n * @since August 24, 2020\r\n */\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private urlService: UrlService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  /**\r\n   * Logs a user in and generates a JWT token for that user\r\n   *\r\n   * @param username - username of the user\r\n   * @param password - password for the user\r\n   */\r\n  authenticate(username: string, password: string) {\r\n    console.log(`${this.urlService.getAPIUrl()}/authenticate`);\r\n    this.http\r\n      .post(`${this.urlService.getAPIUrl()}/authenticate`, {\r\n        username,\r\n        password,\r\n      })\r\n      .subscribe(() => this.router.navigate(['home']));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../../models/user.model';\r\nimport { UrlService } from '../url/url.service';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * User Service class that deal with the user microservice\r\n *\r\n * @author Sam Butler\r\n * @since August 31, 2020\r\n */\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private urlService: UrlService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  /**\r\n   * Method to create a new user given a User object\r\n   *\r\n   * @param newUser - The new user to be created\r\n   */\r\n  createUser(newUser: User) {\r\n    this.http\r\n      .post(`${this.urlService.getAPIUrl()}/api/acm/users`, newUser)\r\n      .subscribe((r) => this.router.navigate(['/landing']));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'ak-login-card',\r\n  templateUrl: './login-card.component.html',\r\n  styleUrls: ['./login-card.component.scss'],\r\n})\r\nexport class LoginCardComponent {\r\n  twitterLink = '';\r\n  twitterIcon =\r\n    'https://cdn4.iconfinder.com/data/icons/miu-hexagon-flat-social/60/twitter-hexagon-social-media-32.png';\r\n\r\n  githubLink = 'https://github.com/cse-uprc';\r\n  githubIcon =\r\n    'https://cdn3.iconfinder.com/data/icons/free-social-icons/67/github_six_gray-256.png';\r\n\r\n  facebookLink = '';\r\n  facebookIcon =\r\n    'https://cdn3.iconfinder.com/data/icons/free-social-icons/67/Untitled-16-32.png';\r\n\r\n  loading = false;\r\n\r\n  constructor(\r\n    private readonly authService: AuthService,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  onSignIn(username: string, password: string) {\r\n    this.loading = true;\r\n    this.authService.authenticate(username, password);\r\n  }\r\n\r\n  onSignUp(firstName: string, lastName: string, email: string) {\r\n    this.loading = true;\r\n    const newUser: User = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n    };\r\n    this.userService.createUser(newUser);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ak-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent {\r\n  @Input() title = '';\r\n  @Output() sidebarClicked: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  constructor() {}\r\n\r\n  toggleSidebar() {\r\n    this.sidebarClicked.emit(true);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SidebarItem } from '../../models/sidebar-item.model';\r\n\r\n@Component({\r\n  selector: 'ak-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SiderbarComponent implements OnInit {\r\n  @Input() items: SidebarItem[] = [\r\n    { name: 'Dashboard', icon: 'house', link: '/home/dashboard' },\r\n    { name: 'Classroom', icon: 'classroom', link: '/home/classroom' },\r\n    { name: 'Resources', icon: 'resources', link: '/home/resources' },\r\n    { name: 'Teachers', icon: 'teachers', link: '/home/teachers' },\r\n    {\r\n      name: 'Student Advisors',\r\n      icon: 'board-members',\r\n      link: '/home/student-advisors',\r\n    },\r\n    { name: 'Video Lectures', icon: 'video', link: '/home/video-lectures' },\r\n    { name: 'Calendar', icon: 'calendar', link: '/home/calendar' },\r\n    { name: 'Event Sign Up', icon: 'contract', link: '/home/event-sign-up' },\r\n    { name: 'ACM Information', icon: 'info', link: '/home/acm-information' },\r\n    { name: 'Bot Service Info', icon: 'robot', link: '/home/bot-service-info' },\r\n    { name: 'About Us', icon: 'question', link: '/home/about-us' },\r\n    {\r\n      name: 'Contact Services',\r\n      icon: 'contact',\r\n      link: '/home/contact-services',\r\n    },\r\n  ];\r\n  sidebarOpen = true;\r\n  path: string;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.path = window.location.pathname;\r\n  }\r\n\r\n  route(item: SidebarItem) {\r\n    this.path = item.link;\r\n    this.router.navigate([item.link]);\r\n  }\r\n\r\n  open() {\r\n    document.getElementById('sidebar').style.width = '16rem';\r\n    this.sidebarOpen = true;\r\n  }\r\n\r\n  close() {\r\n    document.getElementById('sidebar').style.width = '3.5rem';\r\n    this.sidebarOpen = false;\r\n  }\r\n\r\n  toggle() {\r\n    if (this.sidebarOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  isOpen() {\r\n    return this.sidebarOpen;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\nexport const TOKEN_NAME = 'token';\r\n\r\n/**\r\n * JWT class to handle all the modifications of a users jwt token\r\n * and handling the storing and retrieval of the token.\r\n *\r\n * @author Sam Butler\r\n * @since August 24, 2020\r\n */\r\n@Injectable()\r\nexport class JwtService {\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Get the current cached token\r\n   *\r\n   * @return String value of the token\r\n   */\r\n  getToken(): string {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n  }\r\n\r\n  /**\r\n   * Sets the jwt token for the current active user\r\n   *\r\n   * @param token - the token to store in the local cache\r\n   */\r\n  setToken(token: string): void {\r\n    localStorage.setItem(TOKEN_NAME, token);\r\n  }\r\n\r\n  /**\r\n   * Get the expiration date of the currently stored token\r\n   *\r\n   * @return Tokens expiration date\r\n   */\r\n  getTokenExpirationDate(): Date {\r\n    const exp = this.getDecodedToken().exp;\r\n\r\n    if (exp === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const date = new Date(0);\r\n    date.setUTCSeconds(exp);\r\n    return date;\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the users token is expired\r\n   *\r\n   * @return Boolean indicating if the token is expired\r\n   */\r\n  isTokenExpired(): boolean {\r\n    const date = this.getTokenExpirationDate();\r\n    if (date === undefined) {\r\n      return false;\r\n    }\r\n    return !(date.valueOf() > new Date().valueOf());\r\n  }\r\n\r\n  /**\r\n   * Confirms that the users token is valid\r\n   *\r\n   * @return Boolean saying if the token is valid or not\r\n   */\r\n  isValidToken(): boolean {\r\n    if (localStorage.getItem(TOKEN_NAME) != null) {\r\n      if (this.isTokenExpired()) {\r\n        localStorage.removeItem(TOKEN_NAME);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the decoded token object\r\n   *\r\n   * @return Object of the decoded token\r\n   */\r\n  getDecodedToken(): any {\r\n    return jwt_decode(this.getToken());\r\n  }\r\n\r\n  /**\r\n   * Get method to get a certain field from the users token\r\n   *\r\n   * @param field - The field we want to get from the token\r\n   * @return the object the field contains\r\n   */\r\n  get(field: string): any {\r\n    const decoded = jwt_decode(this.getToken());\r\n    return decoded[field];\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the user is logged in\r\n   *\r\n   * @return A boolean value indicating that status of the user\r\n   */\r\n  isUserLoggedIn(): boolean {\r\n    return localStorage.getItem(TOKEN_NAME) !== null;\r\n  }\r\n\r\n  /**\r\n   * Logs the user out and deletes their token from the local cache\r\n   */\r\n  logout() {\r\n    localStorage.removeItem(TOKEN_NAME);\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectableRxStompConfig } from '@stomp/ng2-stompjs';\r\nimport { Environment } from '../../assets/globals';\r\nimport { UrlService } from '../url/url.service';\r\n\r\nexport const defaultStompConfig: InjectableRxStompConfig = {\r\n  // Which server?\r\n  brokerURL: '',\r\n\r\n  // How often to heartbeat?\r\n  // Interval in milliseconds, set to 0 to disable\r\n  heartbeatIncoming: 20000, // Typical value 0 - disabled\r\n  heartbeatOutgoing: 20000, // Typical value 20000 - every 20 seconds\r\n\r\n  // Wait in milliseconds before attempting auto reconnect\r\n  // Set to 0 to disable\r\n  // Typical value 500 (500 milli seconds)\r\n  reconnectDelay: 5000,\r\n};\r\n\r\n@Injectable()\r\nexport class StompUrlService {\r\n  constructor(private urlService: UrlService) {}\r\n  /**\r\n   * Builds the broker URL.\r\n   * @param subdomain The subdomain.\r\n   */\r\n  buildBrokerUrl(): string {\r\n    return this.urlService.getSocketPath();\r\n  }\r\n}\r\n\r\n/**\r\n * A factory for creating an InjectableRxStompConfig for use with Insite notifications.\r\n * @param stompUrlService The STOMP URL service\r\n */\r\nexport const stompConfigFactory = (\r\n  stompUrlService: StompUrlService\r\n): InjectableRxStompConfig => {\r\n  return {\r\n    ...defaultStompConfig,\r\n    brokerURL: stompUrlService.buildBrokerUrl(),\r\n  };\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { IMessage } from '@stomp/stompjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { StompMessage } from './stomp-websocket.model';\r\nimport { InjectableRxStompConfig, RxStompService } from '@stomp/ng2-stompjs';\r\n\r\n/**\r\n * Stomp Service\r\n *\r\n * @author Sam Butler\r\n * @since August 31, 2020\r\n */\r\n@Injectable()\r\nexport class StompWebsocketService extends RxStompService {\r\n  isActivated = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Initiate the connection with the broker.\r\n   * If the connection breaks, as per reconnectDelay,it will keep trying to reconnect.\r\n   */\r\n  activate(): void {\r\n    if (!this.isActivated) {\r\n      this.isActivated = true;\r\n      super.activate();\r\n    }\r\n  }\r\n  /**\r\n   * Disconnect if connected and stop auto reconnect loop.\r\n   * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\r\n   *\r\n   * To reactivate you can call activate.\r\n   */\r\n  deactivate(): void {\r\n    this.isActivated = false;\r\n    super.deactivate();\r\n  }\r\n\r\n  watch<T>(destination: string): Observable<StompMessage<T>> {\r\n    return super.watch(destination).pipe(map((message) => this.parse(message)));\r\n  }\r\n\r\n  /**\r\n   * Parses an IMessage into an StompMessage.\r\n   * @param message The message to parse\r\n   */\r\n  parse<T>(message: IMessage): StompMessage<T> {\r\n    const instance = message.body ? JSON.parse(message.body) : null;\r\n    return {\r\n      ...message,\r\n      data: instance,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Factory to create an setup the StompWebsocketService.\r\n * @param authService The AuthService\r\n */\r\nexport const stompWebsocketServiceFactory = (\r\n  stompConfig: InjectableRxStompConfig\r\n): StompWebsocketService => {\r\n  const service = new StompWebsocketService();\r\n  service.configure(stompConfig);\r\n  return service;\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { InjectableRxStompConfig } from '@stomp/ng2-stompjs';\r\n\r\nimport { stompConfigFactory, StompUrlService } from './stomp-websocket.config';\r\nimport {\r\n  StompWebsocketService,\r\n  stompWebsocketServiceFactory,\r\n} from './stomp-websocket.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    StompUrlService,\r\n    {\r\n      provide: StompWebsocketService,\r\n      useFactory: stompWebsocketServiceFactory,\r\n      deps: [InjectableRxStompConfig],\r\n    },\r\n    {\r\n      provide: InjectableRxStompConfig,\r\n      useFactory: stompConfigFactory,\r\n      deps: [StompUrlService],\r\n    },\r\n  ],\r\n})\r\nexport class StompWebsocketModule {}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { JwtService } from './jwt/jwt.service';\r\nimport { ParticlesService } from './particles/particles.service';\r\nimport { StompWebsocketModule } from './stomp/stomp-websocket.module';\r\nimport { UrlService } from './url/url.service';\r\nimport { UserService } from './user/user.service';\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, HttpClientModule],\r\n  providers: [\r\n    AuthService,\r\n    ParticlesService,\r\n    UserService,\r\n    JwtService,\r\n    UrlService,\r\n  ],\r\n  exports: [StompWebsocketModule],\r\n})\r\nexport class ServicesModule {}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AcmkitLibComponent } from './acmkit-lib.component';\r\nimport { IconsModule } from './assets/icons/icons.module';\r\nimport { BasePageComponent } from './components/base-page/base-page.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { LoginCardComponent } from './components/login-card/login-card.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SiderbarComponent } from './components/sidebar/sidebar.component';\r\nimport { ServicesModule } from './services/services.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AcmkitLibComponent,\r\n    CardComponent,\r\n    BasePageComponent,\r\n    LoginCardComponent,\r\n    LandingComponent,\r\n    NavbarComponent,\r\n    SiderbarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    ServicesModule,\r\n    IconsModule,\r\n  ],\r\n  exports: [\r\n    AcmkitLibComponent,\r\n    CardComponent,\r\n    BasePageComponent,\r\n    LoginCardComponent,\r\n    LandingComponent,\r\n    NavbarComponent,\r\n    SiderbarComponent,\r\n    ServicesModule,\r\n    IconsModule,\r\n  ],\r\n})\r\nexport class AcmkitLibModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AcmkitLibService {\r\n\r\n  constructor() { }\r\n}\r\n","import { TestBed, TestModuleMetadata } from '@angular/core/testing';\r\n\r\nexport abstract class AbstractTestBed {\r\n  static useProvider(moduleMetaData: TestModuleMetadata, provider: any) {\r\n    const index = moduleMetaData.providers.findIndex(\r\n      (p) => p.provide === provider || p.provide === provider.provide\r\n    );\r\n    if (index >= 0) {\r\n      moduleMetaData.providers.splice(index, 1);\r\n    }\r\n    moduleMetaData.providers.push(provider);\r\n  }\r\n\r\n  static async setup(\r\n    updateModuleMetaData?: (moduleMetaData: TestModuleMetadata) => void\r\n  ): Promise<any> {\r\n    const moduleMetaData = this.getModuleMetaData();\r\n    if (updateModuleMetaData) {\r\n      updateModuleMetaData(moduleMetaData);\r\n    }\r\n    TestBed.configureTestingModule(moduleMetaData);\r\n  }\r\n  static getModuleMetaData(): TestModuleMetadata {\r\n    return null;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestModuleMetadata } from '@angular/core/testing';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { AcmkitLibModule } from '../acmkit-lib.module';\r\nimport { AbstractTestBed } from './abstract-test-bed';\r\n\r\nexport class AcmKitTestBed extends AbstractTestBed {\r\n  static getModuleMetaData(): TestModuleMetadata {\r\n    return {\r\n      imports: [\r\n        RouterTestingModule,\r\n        CommonModule,\r\n        HttpClientTestingModule,\r\n        AcmkitLibModule,\r\n      ],\r\n      declarations: [],\r\n    };\r\n  }\r\n}\r\n","import { configureTestSuite } from 'ng-bullet';\r\n\r\nexport const setupTests = (initTest) => configureTestSuite(() => initTest());\r\n","/**\r\n * Public API Surface of acmkit-lib\r\n */\r\nexport * from './lib/acmkit-lib.component';\r\nexport * from './lib/acmkit-lib.module';\r\nexport * from './lib/acmkit-lib.service';\r\nexport * from './lib/components/base-page/base-page.component';\r\n/**\r\n * Components\r\n */\r\nexport * from './lib/components/card/card.component';\r\nexport * from './lib/components/landing/landing.component';\r\nexport * from './lib/components/login-card/login-card.component';\r\nexport * from './lib/components/navbar/navbar.component';\r\nexport * from './lib/components/sidebar/sidebar.component';\r\n/**\r\n * Models\r\n */\r\nexport * from './lib/models/jwt.model';\r\nexport * from './lib/models/user.model';\r\nexport * from './lib/models/sidebar-item.model';\r\n/**\r\n * Services\r\n */\r\nexport * from './lib/services/auth/auth.service';\r\nexport * from './lib/services/jwt/jwt.service';\r\nexport * from './lib/services/particles/particles.service';\r\nexport * from './lib/services/services.module';\r\n/**\r\n * Testing\r\n */\r\nexport * from './lib/testing/abstract-test-bed';\r\nexport * from './lib/testing/acm-kit-test-bed';\r\nexport * from './lib/testing/test-setup';\r\n/**\r\n * Stomp Websockets\r\n */\r\nexport * from './lib/services/stomp/stomp-websocket.config';\r\nexport * from './lib/services/stomp/stomp-websocket.model';\r\nexport * from './lib/services/stomp/stomp-websocket.module';\r\nexport * from './lib/services/stomp/stomp-websocket.service';\r\n/**\r\n * Icons\r\n */\r\nexport * from './lib/assets/icons/bell/bell.component';\r\nexport * from './lib/assets/icons/board-members/board-members.component';\r\nexport * from './lib/assets/icons/calendar/calendar.component';\r\nexport * from './lib/assets/icons/classroom/classroom.component';\r\nexport * from './lib/assets/icons/contact/contact.component';\r\nexport * from './lib/assets/icons/contract/contract.component';\r\nexport * from './lib/assets/icons/hamburger/hamburger.component';\r\nexport * from './lib/assets/icons/house/house.component';\r\nexport * from './lib/assets/icons/info/info.component';\r\nexport * from './lib/assets/icons/question/question.component';\r\nexport * from './lib/assets/icons/resources/resources.component';\r\nexport * from './lib/assets/icons/robot/robot.component';\r\nexport * from './lib/assets/icons/teachers/teachers.component';\r\nexport * from './lib/assets/icons/video/video.component';\r\nexport * from './lib/assets/icons/icons.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {IconComponent as ɵc} from './lib/assets/icons/icon.component';\nexport {UrlService as ɵa} from './lib/services/url/url.service';\nexport {UserService as ɵb} from './lib/services/user/user.service';"],"names":[],"mappings":"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"}